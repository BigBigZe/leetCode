problem:
You are given two non-empty linked lists representing two non-negative integers. 
The digits are stored in reverse order and each of their nodes contain a single digit.
Add the two numbers and return it as a linked list.

You may assume the two numbers do not contain any leading zero, 
except the number 0 itself.

Example:

Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 0 -> 8
Explanation: 342 + 465 = 807.

solution:	
	老的版本把结果都放在l1进行存储了，节省了空间但是牺牲了很多的时间，而且节省的空间可以忽略不计
	感觉还是时间比较重要，这种算法题对空间的消耗基本可以不考虑
	
	这道题基本思路：
		1.新建一个链表
		2.同时逐个遍历传入的两个链表，求和后（value1+value2+shift）取模存入新链表，这里
		需要注意shift的进位操作
		3.对三个链表同时进行next操作
		4.跳出后判断shift是否为1，为1的话需再在结果后加1，因为传入的两个链表可能最后都遍历完
		了，即直接跳出while，但还有shift没有执行。